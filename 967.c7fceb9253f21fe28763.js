"use strict";(self.webpackChunkpegged=self.webpackChunkpegged||[]).push([[967],{5644:function(r,e,t){t.d(e,{i:function(){return A}});const A="hash/5.7.0"},2046:function(r,e,t){t.d(e,{id:function(){return o}});var A=t(8197),n=t(4242);function o(r){return(0,A.keccak256)((0,n.Y0)(r))}},8339:function(r,e,t){t.d(e,{Kn:function(){return M},VM:function(){return S}});var A=t(3286),n=t(4242),o=t(8197),i=t(711),s=t(5644);function a(r,e){null==e&&(e=1);const t=[],A=t.forEach,n=function(r,e){A.call(r,(function(r){e>0&&Array.isArray(r)?n(r,e-1):t.push(r)}))};return n(r,e),t}function c(r){return 1&r?~r>>1:r>>1}function g(r,e){let t=Array(r);for(let A=0,n=-1;A<r;A++)t[A]=n+=1+e();return t}function u(r,e){let t=Array(r);for(let A=0,n=0;A<r;A++)t[A]=n+=c(e());return t}function f(r,e){let t=g(r(),r),A=r(),n=g(A,r),o=function(r,e){let t=Array(r);for(let A=0;A<r;A++)t[A]=1+e();return t}(A,r);for(let r=0;r<A;r++)for(let e=0;e<o[r];e++)t.push(n[r]+e);return e?t.map((r=>e[r])):t}function h(r,e,t){let A=Array(r).fill(void 0).map((()=>[]));for(let n=0;n<e;n++)u(r,t).forEach(((r,e)=>A[e].push(r)));return A}function E(r,e){let t=1+e(),A=e(),n=function(r){let e=[];for(;;){let t=r();if(0==t)break;e.push(t)}return e}(e);return a(h(n.length,1+r,e).map(((r,e)=>{const o=r[0],i=r.slice(1);return Array(n[e]).fill(void 0).map(((r,e)=>{let n=e*A;return[o+e*t,i.map((r=>r+n))]}))})))}function l(r,e){return h(1+e(),1+r,e).map((r=>[r[0],r.slice(1)]))}const w=function(r){let e=0;return()=>r[e++]}(function(r){let e=0;function t(){return r[e++]<<8|r[e++]}let A=t(),n=1,o=[0,1];for(let r=1;r<A;r++)o.push(n+=t());let i=t(),s=e;e+=i;let a=0,c=0;function g(){return 0==a&&(c=c<<8|r[e++],a=8),c>>--a&1}const u=Math.pow(2,31),f=u>>>1,h=f>>1,E=u-1;let l=0;for(let r=0;r<31;r++)l=l<<1|g();let w=[],C=0,m=u;for(;;){let r=Math.floor(((l-C+1)*n-1)/m),e=0,t=A;for(;t-e>1;){let A=e+t>>>1;r<o[A]?t=A:e=A}if(0==e)break;w.push(e);let i=C+Math.floor(m*o[e]/n),s=C+Math.floor(m*o[e+1]/n)-1;for(;0==((i^s)&f);)l=l<<1&E|g(),i=i<<1&E,s=s<<1&E|1;for(;i&~s&h;)l=l&f|l<<1&E>>>1|g(),i=i<<1^f,s=(s^f)<<1|f|1;C=i,m=1+s-i}let B=A-4;return w.map((e=>{switch(e-B){case 3:return B+65792+(r[s++]<<16|r[s++]<<8|r[s++]);case 2:return B+256+(r[s++]<<8|r[s++]);case 1:return B+r[s++];default:return e-1}}))}((0,t(9567).J)(""))),C=new Set(f(w)),m=new Set(f(w)),B=function(r){let e=[];for(;;){let t=r();if(0==t)break;e.push(E(t,r))}for(;;){let t=r()-1;if(t<0)break;e.push(l(t,r))}return function(r){const e={};for(let t=0;t<r.length;t++){const A=r[t];e[A[0]]=A[1]}return e}(a(e))}(w),p=function(r){let e=f(r).sort(((r,e)=>r-e));return function t(){let A=[];for(;;){let n=f(r,e);if(0==n.length)break;A.push({set:new Set(n),node:t()})}A.sort(((r,e)=>e.set.size-r.set.size));let n=r(),o=n%3;n=n/3|0;let i=!!(1&n);return n>>=1,{branches:A,valid:o,fe0f:i,save:1==n,check:2==n}}()}(w),I=45,N=95;function y(r){return(0,n.XL)(r)}function D(r){return r.filter((r=>65039!=r))}function d(r){for(let e of r.split(".")){let r=y(e);try{for(let e=r.lastIndexOf(N)-1;e>=0;e--)if(r[e]!==N)throw new Error("underscore only allowed at start");if(r.length>=4&&r.every((r=>r<128))&&r[2]===I&&r[3]===I)throw new Error("invalid label extension")}catch(r){throw new Error(`Invalid label "${e}": ${r.message}`)}}return r}function U(r,e){var t;let A,n,o=p,i=[],s=r.length;for(e&&(e.length=0);s;){let a=r[--s];if(o=null===(t=o.branches.find((r=>r.set.has(a))))||void 0===t?void 0:t.node,!o)break;if(o.save)n=a;else if(o.check&&a===n)break;i.push(a),o.fe0f&&(i.push(65039),s>0&&65039==r[s-1]&&s--),o.valid&&(A=i.slice(),2==o.valid&&A.splice(1,1),e&&e.push(...r.slice(s).reverse()),r.length=s)}return A}const T=new i.Yd(s.i),R=new Uint8Array(32);function Q(r){if(0===r.length)throw new Error("invalid ENS name; empty component");return r}function O(r){const e=(0,n.Y0)(function(r){return d(function(r,e){let t=y(r).reverse(),A=[];for(;t.length;){let r=U(t);if(r){A.push(...e(r));continue}let n=t.pop();if(C.has(n)){A.push(n);continue}if(m.has(n))continue;let o=B[n];if(!o)throw new Error(`Disallowed codepoint: 0x${n.toString(16).toUpperCase()}`);A.push(...o)}return d(String.fromCodePoint(...A).normalize("NFC"))}(r,D))}(r)),t=[];if(0===r.length)return t;let A=0;for(let r=0;r<e.length;r++)46===e[r]&&(t.push(Q(e.slice(A,r))),A=r+1);if(A>=e.length)throw new Error("invalid ENS name; empty component");return t.push(Q(e.slice(A))),t}function S(r){"string"!=typeof r&&T.throwArgumentError("invalid ENS name; not a string","name",r);let e=R;const t=O(r);for(;t.length;)e=(0,o.keccak256)((0,A.concat)([e,(0,o.keccak256)(t.pop())]));return(0,A.hexlify)(e)}function M(r){return(0,A.hexlify)((0,A.concat)(O(r).map((r=>{if(r.length>63)throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");const e=new Uint8Array(r.length+1);return e.set(r,1),e[0]=e.length-1,e}))))+"00"}R.fill(0)},7827:function(r,e,t){t.d(e,{E:function(){return d}});var A=t(4594),n=t(2593),o=t(3286),i=t(8197),s=t(3587),a=t(711),c=t(5644),g=t(2046);const u=new a.Yd(c.i),f=new Uint8Array(32);f.fill(0);const h=n.O$.from(-1),E=n.O$.from(0),l=n.O$.from(1),w=n.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),C=(0,o.hexZeroPad)(l.toHexString(),32),m=(0,o.hexZeroPad)(E.toHexString(),32),B={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},p=["name","version","chainId","verifyingContract","salt"];function I(r){return function(e){return"string"!=typeof e&&u.throwArgumentError(`invalid domain value for ${JSON.stringify(r)}`,`domain.${r}`,e),e}}const N={name:I("name"),version:I("version"),chainId:function(r){try{return n.O$.from(r).toString()}catch(r){}return u.throwArgumentError('invalid domain value for "chainId"',"domain.chainId",r)},verifyingContract:function(r){try{return(0,A.Kn)(r).toLowerCase()}catch(r){}return u.throwArgumentError('invalid domain value "verifyingContract"',"domain.verifyingContract",r)},salt:function(r){try{const e=(0,o.arrayify)(r);if(32!==e.length)throw new Error("bad length");return(0,o.hexlify)(e)}catch(r){}return u.throwArgumentError('invalid domain value "salt"',"domain.salt",r)}};function y(r){{const e=r.match(/^(u?)int(\d*)$/);if(e){const t=""===e[1],A=parseInt(e[2]||"256");(A%8!=0||A>256||e[2]&&e[2]!==String(A))&&u.throwArgumentError("invalid numeric width","type",r);const i=w.mask(t?A-1:A),s=t?i.add(l).mul(h):E;return function(e){const t=n.O$.from(e);return(t.lt(s)||t.gt(i))&&u.throwArgumentError(`value out-of-bounds for ${r}`,"value",e),(0,o.hexZeroPad)(t.toTwos(256).toHexString(),32)}}}{const e=r.match(/^bytes(\d+)$/);if(e){const t=parseInt(e[1]);return(0===t||t>32||e[1]!==String(t))&&u.throwArgumentError("invalid bytes width","type",r),function(e){return(0,o.arrayify)(e).length!==t&&u.throwArgumentError(`invalid length for ${r}`,"value",e),function(r){const e=(0,o.arrayify)(r),t=e.length%32;return t?(0,o.hexConcat)([e,f.slice(t)]):(0,o.hexlify)(e)}(e)}}}switch(r){case"address":return function(r){return(0,o.hexZeroPad)((0,A.Kn)(r),32)};case"bool":return function(r){return r?C:m};case"bytes":return function(r){return(0,i.keccak256)(r)};case"string":return function(r){return(0,g.id)(r)}}return null}function D(r,e){return`${r}(${e.map((({name:r,type:e})=>e+" "+r)).join(",")})`}class d{constructor(r){(0,s.zG)(this,"types",Object.freeze((0,s.p$)(r))),(0,s.zG)(this,"_encoderCache",{}),(0,s.zG)(this,"_types",{});const e={},t={},A={};Object.keys(r).forEach((r=>{e[r]={},t[r]=[],A[r]={}}));for(const A in r){const n={};r[A].forEach((o=>{n[o.name]&&u.throwArgumentError(`duplicate variable name ${JSON.stringify(o.name)} in ${JSON.stringify(A)}`,"types",r),n[o.name]=!0;const i=o.type.match(/^([^\x5b]*)(\x5b|$)/)[1];i===A&&u.throwArgumentError(`circular type reference to ${JSON.stringify(i)}`,"types",r),y(i)||(t[i]||u.throwArgumentError(`unknown type ${JSON.stringify(i)}`,"types",r),t[i].push(A),e[A][i]=!0)}))}const n=Object.keys(t).filter((r=>0===t[r].length));0===n.length?u.throwArgumentError("missing primary type","types",r):n.length>1&&u.throwArgumentError(`ambiguous primary types or unused types: ${n.map((r=>JSON.stringify(r))).join(", ")}`,"types",r),(0,s.zG)(this,"primaryType",n[0]),function n(o,i){i[o]&&u.throwArgumentError(`circular type reference to ${JSON.stringify(o)}`,"types",r),i[o]=!0,Object.keys(e[o]).forEach((r=>{t[r]&&(n(r,i),Object.keys(i).forEach((e=>{A[e][r]=!0})))})),delete i[o]}(this.primaryType,{});for(const e in A){const t=Object.keys(A[e]);t.sort(),this._types[e]=D(e,r[e])+t.map((e=>D(e,r[e]))).join("")}}getEncoder(r){let e=this._encoderCache[r];return e||(e=this._encoderCache[r]=this._getEncoder(r)),e}_getEncoder(r){{const e=y(r);if(e)return e}const e=r.match(/^(.*)(\x5b(\d*)\x5d)$/);if(e){const r=e[1],t=this.getEncoder(r),A=parseInt(e[3]);return e=>{A>=0&&e.length!==A&&u.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",e);let n=e.map(t);return this._types[r]&&(n=n.map(i.keccak256)),(0,i.keccak256)((0,o.hexConcat)(n))}}const t=this.types[r];if(t){const e=(0,g.id)(this._types[r]);return r=>{const A=t.map((({name:e,type:t})=>{const A=this.getEncoder(t)(r[e]);return this._types[t]?(0,i.keccak256)(A):A}));return A.unshift(e),(0,o.hexConcat)(A)}}return u.throwArgumentError(`unknown type: ${r}`,"type",r)}encodeType(r){const e=this._types[r];return e||u.throwArgumentError(`unknown type: ${JSON.stringify(r)}`,"name",r),e}encodeData(r,e){return this.getEncoder(r)(e)}hashStruct(r,e){return(0,i.keccak256)(this.encodeData(r,e))}encode(r){return this.encodeData(this.primaryType,r)}hash(r){return this.hashStruct(this.primaryType,r)}_visit(r,e,t){if(y(r))return t(r,e);const A=r.match(/^(.*)(\x5b(\d*)\x5d)$/);if(A){const r=A[1],n=parseInt(A[3]);return n>=0&&e.length!==n&&u.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",e),e.map((e=>this._visit(r,e,t)))}const n=this.types[r];return n?n.reduce(((r,{name:A,type:n})=>(r[A]=this._visit(n,e[A],t),r)),{}):u.throwArgumentError(`unknown type: ${r}`,"type",r)}visit(r,e){return this._visit(this.primaryType,r,e)}static from(r){return new d(r)}static getPrimaryType(r){return d.from(r).primaryType}static hashStruct(r,e,t){return d.from(e).hashStruct(r,t)}static hashDomain(r){const e=[];for(const t in r){const A=B[t];A||u.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(t)}`,"domain",r),e.push({name:t,type:A})}return e.sort(((r,e)=>p.indexOf(r.name)-p.indexOf(e.name))),d.hashStruct("EIP712Domain",{EIP712Domain:e},r)}static encode(r,e,t){return(0,o.hexConcat)(["0x1901",d.hashDomain(r),d.from(e).hash(t)])}static hash(r,e,t){return(0,i.keccak256)(d.encode(r,e,t))}static resolveNames(r,e,t,A){return n=this,i=void 0,c=function*(){r=(0,s.DC)(r);const n={};r.verifyingContract&&!(0,o.isHexString)(r.verifyingContract,20)&&(n[r.verifyingContract]="0x");const i=d.from(e);i.visit(t,((r,e)=>("address"!==r||(0,o.isHexString)(e,20)||(n[e]="0x"),e)));for(const r in n)n[r]=yield A(r);return r.verifyingContract&&n[r.verifyingContract]&&(r.verifyingContract=n[r.verifyingContract]),t=i.visit(t,((r,e)=>"address"===r&&n[e]?n[e]:e)),{domain:r,value:t}},new((a=void 0)||(a=Promise))((function(r,e){function t(r){try{o(c.next(r))}catch(r){e(r)}}function A(r){try{o(c.throw(r))}catch(r){e(r)}}function o(e){var n;e.done?r(e.value):(n=e.value,n instanceof a?n:new a((function(r){r(n)}))).then(t,A)}o((c=c.apply(n,i||[])).next())}));var n,i,a,c}static getPayload(r,e,t){d.hashDomain(r);const A={},i=[];p.forEach((e=>{const t=r[e];null!=t&&(A[e]=N[e](t),i.push({name:e,type:B[e]}))}));const a=d.from(e),c=(0,s.DC)(e);return c.EIP712Domain?u.throwArgumentError("types must not contain EIP712Domain type","types.EIP712Domain",e):c.EIP712Domain=i,a.encode(t),{types:c,domain:A,primaryType:a.primaryType,message:a.visit(t,((r,e)=>{if(r.match(/^bytes(\d*)/))return(0,o.hexlify)((0,o.arrayify)(e));if(r.match(/^u?int/))return n.O$.from(e).toString();switch(r){case"address":return e.toLowerCase();case"bool":return!!e;case"string":return"string"!=typeof e&&u.throwArgumentError("invalid string","value",e),e}return u.throwArgumentError("unsupported type","type",r)}))}}}},8197:function(r,e,t){t.r(e),t.d(e,{keccak256:function(){return i}});var A=t(1094),n=t.n(A),o=t(3286);function i(r){return"0x"+n().keccak_256((0,o.arrayify)(r))}},711:function(r,e,t){t.d(e,{Yd:function(){return f}});let A=!1,n=!1;const o={debug:1,default:2,info:2,warning:3,error:4,off:5};let i=o.default,s=null;const a=function(){try{const r=[];if(["NFD","NFC","NFKD","NFKC"].forEach((e=>{try{if("test"!=="test".normalize(e))throw new Error("bad normalize")}catch(t){r.push(e)}})),r.length)throw new Error("missing "+r.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(r){return r.message}return null}();var c,g;!function(r){r.DEBUG="DEBUG",r.INFO="INFO",r.WARNING="WARNING",r.ERROR="ERROR",r.OFF="OFF"}(c||(c={})),function(r){r.UNKNOWN_ERROR="UNKNOWN_ERROR",r.NOT_IMPLEMENTED="NOT_IMPLEMENTED",r.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",r.NETWORK_ERROR="NETWORK_ERROR",r.SERVER_ERROR="SERVER_ERROR",r.TIMEOUT="TIMEOUT",r.BUFFER_OVERRUN="BUFFER_OVERRUN",r.NUMERIC_FAULT="NUMERIC_FAULT",r.MISSING_NEW="MISSING_NEW",r.INVALID_ARGUMENT="INVALID_ARGUMENT",r.MISSING_ARGUMENT="MISSING_ARGUMENT",r.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",r.CALL_EXCEPTION="CALL_EXCEPTION",r.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",r.NONCE_EXPIRED="NONCE_EXPIRED",r.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",r.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",r.TRANSACTION_REPLACED="TRANSACTION_REPLACED",r.ACTION_REJECTED="ACTION_REJECTED"}(g||(g={}));const u="0123456789abcdef";class f{constructor(r){Object.defineProperty(this,"version",{enumerable:!0,value:r,writable:!1})}_log(r,e){const t=r.toLowerCase();null==o[t]&&this.throwArgumentError("invalid log level name","logLevel",r),i>o[t]||console.log.apply(console,e)}debug(...r){this._log(f.levels.DEBUG,r)}info(...r){this._log(f.levels.INFO,r)}warn(...r){this._log(f.levels.WARNING,r)}makeError(r,e,t){if(n)return this.makeError("censored error",e,{});e||(e=f.errors.UNKNOWN_ERROR),t||(t={});const A=[];Object.keys(t).forEach((r=>{const e=t[r];try{if(e instanceof Uint8Array){let t="";for(let r=0;r<e.length;r++)t+=u[e[r]>>4],t+=u[15&e[r]];A.push(r+"=Uint8Array(0x"+t+")")}else A.push(r+"="+JSON.stringify(e))}catch(e){A.push(r+"="+JSON.stringify(t[r].toString()))}})),A.push(`code=${e}`),A.push(`version=${this.version}`);const o=r;let i="";switch(e){case g.NUMERIC_FAULT:{i="NUMERIC_FAULT";const e=r;switch(e){case"overflow":case"underflow":case"division-by-zero":i+="-"+e;break;case"negative-power":case"negative-width":i+="-unsupported";break;case"unbound-bitwise-result":i+="-unbound-result"}break}case g.CALL_EXCEPTION:case g.INSUFFICIENT_FUNDS:case g.MISSING_NEW:case g.NONCE_EXPIRED:case g.REPLACEMENT_UNDERPRICED:case g.TRANSACTION_REPLACED:case g.UNPREDICTABLE_GAS_LIMIT:i=e}i&&(r+=" [ See: https://links.ethers.org/v5-errors-"+i+" ]"),A.length&&(r+=" ("+A.join(", ")+")");const s=new Error(r);return s.reason=o,s.code=e,Object.keys(t).forEach((function(r){s[r]=t[r]})),s}throwError(r,e,t){throw this.makeError(r,e,t)}throwArgumentError(r,e,t){return this.throwError(r,f.errors.INVALID_ARGUMENT,{argument:e,value:t})}assert(r,e,t,A){r||this.throwError(e,t,A)}assertArgument(r,e,t,A){r||this.throwArgumentError(e,t,A)}checkNormalize(r){null==r&&(r="platform missing String.prototype.normalize"),a&&this.throwError("platform missing String.prototype.normalize",f.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:a})}checkSafeUint53(r,e){"number"==typeof r&&(null==e&&(e="value not safe"),(r<0||r>=9007199254740991)&&this.throwError(e,f.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:r}),r%1&&this.throwError(e,f.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:r}))}checkArgumentCount(r,e,t){t=t?": "+t:"",r<e&&this.throwError("missing argument"+t,f.errors.MISSING_ARGUMENT,{count:r,expectedCount:e}),r>e&&this.throwError("too many arguments"+t,f.errors.UNEXPECTED_ARGUMENT,{count:r,expectedCount:e})}checkNew(r,e){r!==Object&&null!=r||this.throwError("missing new",f.errors.MISSING_NEW,{name:e.name})}checkAbstract(r,e){r===e?this.throwError("cannot instantiate abstract class "+JSON.stringify(e.name)+" directly; use a sub-class",f.errors.UNSUPPORTED_OPERATION,{name:r.name,operation:"new"}):r!==Object&&null!=r||this.throwError("missing new",f.errors.MISSING_NEW,{name:e.name})}static globalLogger(){return s||(s=new f("logger/5.7.0")),s}static setCensorship(r,e){if(!r&&e&&this.globalLogger().throwError("cannot permanently disable censorship",f.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),A){if(!r)return;this.globalLogger().throwError("error censorship permanent",f.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}n=!!r,A=!!e}static setLogLevel(r){const e=o[r.toLowerCase()];null!=e?i=e:f.globalLogger().warn("invalid log level - "+r)}static from(r){return new f(r)}}f.errors=g,f.levels=c}}]);